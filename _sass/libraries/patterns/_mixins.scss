@mixin screen-size($media) {
  @if $media == small {
    @media only screen and (max-width: $break-small) { @content; }
  }
  @else if $media == medium {
    @media only screen and (min-width: $break-small + 1) and (max-width: $break-large - 1) { @content; }
  }
  @else if $media == large {
    @media only screen and (min-width: $break-large) { @content; }
  }
}

@mixin clear-fix() {
  &:after {
    content: " ";
    display: table;
    clear: both;
  }
}

@mixin bumper() {
    &.sticky-supported.bumped {
      // position: -webkit-sticky !important;
      // position: -moz-sticky !important;
      // position: -ms-sticky !important;
      // position: -o-sticky !important;
      // top: 1px!important;
    }
}

@mixin avatar($border-radius: 50%, $border: 0.055556em solid rgba(0,0,0,0.2), $height: 2em, $width: 2em) {
    display: inline-block;
    overflow: hidden;
    border-radius: $border-radius;
    border: $border;
    height: $height;
    width: $width;
    img {
        width: 100%;
    }
}

@mixin pat-separator($height: 0.05em, $margin: 1em 10% 2em, $colour: gray) {
  background-color: $colour;
  height: $height;
  border: none;
  display: block;
    margin: $margin;
    clear: both;
}

@mixin pat-message() {
    color: rgba(0,0,0,0.5);
    padding: 0.8em;
    margin-bottom: 1em;
    border: rgba(0,0,0,0.05) solid 0.2rem;
    background-color: #efefef;

    &.success {
        background-color: $colour-success;
        color: white;
    }
    &.notice {
        background-color: $colour-notice;
    }
    &.warning {
        background-color: $colour-warning;
        color: white;
    }
}